<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="data.mybatis.mapper.UserMapper">
     <resultMap type="com.spring.ott.security.csh.FinalUserDetail" id="userDetail">
     	<id property="user_id" column="user_id"/>
     	<result property="pwd" column="pwd"/>
     	<result property="enabled" column="enabled"/>
     	<result property="black_enabled" column="black_enabled"/>
     	<collection property="authList" ofType="com.spring.ott.vo.AuthoritiesVo">
     		<result property="user_id" column="user_id"/>
     		<result property="authority" column="authority"/>
     	</collection>
     </resultMap>
     
     <select id="getAuths" parameterType="String" resultMap="userDetail">
     	select * from users u,user_role r
     	where u.user_id=r.user_id and u.user_id=#{user_id}
     </select>
     <insert id="insertUser" parameterType="com.spring.ott.vo.UserVo">
     	insert into users values(#{user_id},#{pwd},#{name},#{jnum},#{age},#{area},#{email},sysdate,#{profile_id},1,1)
     </insert>
     <insert id="insertAuth" parameterType="com.spring.ott.vo.AuthoritiesVo">
     	insert into user_role values(seq_role.nextval,#{user_id},DEFAULT)
     </insert>
     <update id="updateUser" parameterType="com.spring.ott.vo.UserVo">
     	update users set pwd=#{pwd}, name=#{name}, age=#{age}, area=#{area} where user_id=#{user_id}
     </update>
     <select id="selectUser" parameterType="String" resultType="com.spring.ott.vo.UserVo">
     	select * from users where user_id=#{user_id}
     </select>
     <update id="deleteUser" parameterType="String">
     	update users set enabled=0 where user_id=#{user_id}
     </update>
     <select id="deleteChk" parameterType="String" resultType="int">
		select age from users where user_id=#{user_id} and pwd=#{pwd}
	</select>
     <update id="blackUser" parameterType="String">
     	update users set black_enabled=0 where user_id=#{user_id}
     </update>
     <update id="unBlackUser" parameterType="String">
     	update users set black_enabled=1 where user_id=#{user_id}
     </update>
     
     <select id="totalRowCnt" resultType="int">
		select nvl(count(*),0)from users
	</select>
	<select id="UserList" parameterType="hashmap" resultType="com.spring.ott.vo.UserVo">
		select * from
		(
			select b.*, rownum rnum
			from(
				select * from users
				order by regdate desc
			)b	
		)
		<![CDATA[ where rnum >= #{startRow} and rnum <= #{endRow}]]>
	</select>
	<select id="AllSelect" resultType="com.spring.ott.vo.UserVo">
		select * from users
	</select>
	
	<select id="findId" parameterType="String" resultType="String">
		select user_id from users where name=#{name} and email=#{email}
	</select>
	<select id="findPwdChk" parameterType="String" resultType="com.spring.ott.vo.UserVo">
		select * from users where user_id=#{user_id} and email=#{email}
	</select>
	<update id="findPwd" parameterType="com.spring.ott.vo.UserVo">
		update users set pwd=#{pwd} where user_id=#{user_id} and email=#{email}
	</update>
	
	<!-- 김인회 start -->
	<resultMap type="com.spring.ott.vo.MemberVo" id="member">
		<result column="user_id" property="user_id"/>
		<result column="src_name" property="src_name"/>
	</resultMap>

	<select id="selectMember" resultMap="member" parameterType="string">
		select u.user_id, p.src_name  from users u, profileimg p
		where u.profile_id = p.profile_id and u.user_id = #{user_id}
	</select>

	<!-- 김인회 end -->
	
	
 </mapper>